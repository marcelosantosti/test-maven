apply plugin: 'com.jfrog.bintray'

version = libraryVersion

/*
 * Comment the following part if you only want to distribute .aar files.
 * (For example, your source code is obfuscated by Proguard and is not shown to outsite developers)
 * Without source code .jar files, you only can publish on bintray respository but not jcenter.
 */

/*--------------------------------*/
if (project.hasProperty("android")) {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
/*--------------------------------*/

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    publications = ['Publication']

    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        userOrg = organization   // If the repository is hosted by an organization instead of personal account.
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
    }
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id '123456'
            name 'Marcelo Santos'
            email 'marcelo.luis.santos@outlook.com'
        }
    }

    scm {
        url "https://github.com/marcelosantosti/test-maven"
    }
}

publishing {
    publications {
        Publication(MavenPublication) {
            artifact 'build/intermediates/bundles/default/classes.jar'
            //artifact sourcesJar
            //artifact javadocJar
            groupId publishedGroupId
            artifactId artifactId
            version libraryVersion
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Your description of the lib')
                root.appendNode('name', 'Your name of the lib')
                root.appendNode('url', 'https://site_for_lib.tld')
                root.children().last() + pomConfig
            }
        }
    }
}